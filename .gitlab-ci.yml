---
workflow:
  rules:
    # Run on tags
    - if: $CI_COMMIT_TAG

stages:
  - lint
  - build

.base:
  image: tde-green-public-docker-local.artifactory.swisscom.com/go-with-up-cli:1.21.2-bookworm-0.19.2
  variables:
    KUBERNETES_CPU_REQUEST: "3"
    KUBERNETES_CPU_LIMIT: "5"
    KUBERNETES_MEMORY_REQUEST: "4Gi"
    KUBERNETES_MEMORY_LIMIT: "4Gi"
    GIT_SUBMODULE_STRATEGY: recursive
    HTTPS_PROXY: http://server-proxy.corproot.net:8080
    NO_PROXY: '127.0.0.1,localhost,code.swisscom.com,git.swisscom.com,artifactory.swisscom.com,bin.swisscom.com,icp.swisscom.com'
    GOFLAGS: '-buildvcs=false'
    GOARCH: amd64
    CGO_ENABLED: 0
    GOOS: linux
  script:
    - mkdir -p $HOME/.docker && cat $DOCKER_CONFIG_JSON > $HOME/.docker/config.json
    - git config --global --add safe.directory $CI_PROJECT_DIR

lint:
  stage: lint
  extends: .base
  allow_failure: true
  script:
    - curl -fsSL https://github.com/golangci/golangci-lint/releases/download/v1.54.0/golangci-lint-1.54.0-linux-amd64.tar.gz  | tar -xz --strip-components=1 -C /tmp
    - /tmp/golangci-lint run -v -c .golangci.yml

build:
  stage: build
  extends: .base
  variables:
  script:
    - |
      if [[ $CI_COMMIT_TAG =~ ^v?[0-9]{1,4}.[0-9]{1,4}.[0-9]{1,4}$ ]]; then
        export DESTINATION_REGISTRY=tde-green-public-docker-local.artifactory.swisscom.com
        BUILD_TYPE=release
      else
        export DESTINATION_REGISTRY=crossplane-dev-docker-local.artifactory.swisscom.com
        BUILD_TYPE=development
      fi
      echo "this build classified as ${BUILD_TYPE} based on tag ${CI_COMMIT_TAG}"
    - go build -o provider-aws-linux-amd64 cmd/provider/main.go
    - /up xpkg build --package-root="." XPKG_EXAMPLES_DIR --examples-root="./examples" --output="./provider-aws.xpkg"
    - /up xpkg publish ${DESTINATION_REGISTRY}/provider-aws:${CI_COMMIT_TAG} -f ./provider-aws.xpkg